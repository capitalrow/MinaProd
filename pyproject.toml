[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mina-transcription-hub"
version = "0.1.0"
description = "Meeting Insights & Action Platform - Real-time transcription and AI-powered meeting productivity"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Mina Development Team", email = "dev@mina-platform.com"},
]
keywords = ["transcription", "meetings", "ai", "productivity", "real-time"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Office/Business",
    "Topic :: Communications :: Conferencing",
]

dependencies = [
    "flask>=2.3.0",
    "flask-socketio>=5.3.0",
    "flask-sqlalchemy>=3.0.0",
    "python-dotenv>=1.0.0",
    "werkzeug>=2.3.0",
    "whitenoise>=6.5.0",
    "eventlet>=0.33.0",
    "python-engineio>=4.7.0",
    "python-socketio[asyncio-client,client]>=5.8.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "webrtcvad>=2.0.10",
    "pydub>=0.25.0",
    "requests>=2.31.0",
    "openai>=1.0.0",
    "sqlalchemy>=2.0.0",
    "flask-cors>=6.0.1",
    "pytest>=8.4.1",
    "black>=25.1.0",
    "ruff>=0.12.10",
    "python-docx>=1.2.0",
    "reportlab>=4.4.3",
    "gunicorn[eventlet]>=23.0.0",
    "psutil>=7.0.0",
    "websocket>=0.2.1",
    "redis>=6.4.0",
    "cryptography>=45.0.6",
    "bcrypt>=4.3.0",
    "pyjwt>=2.10.1",
    "flask-login>=0.6.3",
    "aiohttp>=3.12.15",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-flask>=1.2.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "ipython>=8.14.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-flask>=1.2.0",
    "pytest-asyncio>=0.21.0",
    "requests-mock>=1.11.0",
]

production = [
    "gunicorn>=21.2.0",
    "gevent>=23.7.0",
    "redis>=4.6.0",
    "psycopg2-binary>=2.9.7",
]

[project.urls]
Homepage = "https://github.com/mina-platform/mina-transcription-hub"
Documentation = "https://docs.mina-platform.com"
Repository = "https://github.com/mina-platform/mina-transcription-hub.git"
Issues = "https://github.com/mina-platform/mina-transcription-hub/issues"

[project.scripts]
mina = "main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["models*", "services*", "routes*", "middleware*"]
exclude = ["tests*", "docs*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
    "*/.env/*",
    "setup.py",
    "conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
