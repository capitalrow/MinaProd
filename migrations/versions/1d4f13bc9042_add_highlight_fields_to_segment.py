"""Add highlight fields to Segment

Revision ID: 1d4f13bc9042
Revises: 4a2481cbbc0e
Create Date: 2025-10-20 10:33:11.221204

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1d4f13bc9042'
down_revision = '4a2481cbbc0e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscriptions')
    op.drop_table('integration_tokens')
    op.drop_table('teams')
    op.drop_table('memory_embeddings')
    op.drop_table('summary_docs')
    op.drop_table('memberships')
    op.drop_table('feature_flags')
    op.drop_table('customers')
    with op.batch_alter_table('analytics', schema=None) as batch_op:
        batch_op.drop_index('ix_analytics_status_created')
        batch_op.create_index('ix_analytics_status_created', ['analysis_status', 'created_at'], unique=False)

    with op.batch_alter_table('meetings', schema=None) as batch_op:
        batch_op.drop_index('ix_meetings_organizer_id')
        batch_op.drop_index('ix_meetings_session_id')
        batch_op.drop_index('ix_meetings_workspace_status_created')
        batch_op.create_index('ix_meetings_workspace_status_created', ['workspace_id', 'status', 'created_at'], unique=False)
        batch_op.create_index('ix_meetings_organizer', ['organizer_id'], unique=False)
        batch_op.drop_constraint('meetings_session_id_fkey', type_='foreignkey')
        batch_op.drop_column('session_id')

    with op.batch_alter_table('segments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_highlighted', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('highlight_color', sa.String(length=24), nullable=True))

    with op.batch_alter_table('sessions', schema=None) as batch_op:
        batch_op.drop_index('ix_sessions_meeting')
        batch_op.drop_index('ix_sessions_user')
        batch_op.drop_index('ix_sessions_workspace')
        batch_op.drop_index('ix_sessions_status_started')
        batch_op.create_index('ix_sessions_status_started', ['status', 'started_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_sessions_meeting_id'), ['meeting_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sessions_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sessions_workspace_id'), ['workspace_id'], unique=False)

    with op.batch_alter_table('share_analytics', schema=None) as batch_op:
        batch_op.add_column(sa.Column('shared_link_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('visitor_ip', sa.String(length=45), nullable=True))
        batch_op.add_column(sa.Column('visitor_user_agent', sa.String(length=500), nullable=True))
        batch_op.add_column(sa.Column('visitor_country', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('time_spent_seconds', sa.Integer(), nullable=True))
        batch_op.drop_constraint('share_analytics_share_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'shared_links', ['shared_link_id'], ['id'])
        batch_op.drop_column('session_duration')
        batch_op.drop_column('viewer_user_agent')
        batch_op.drop_column('viewer_ip')
        batch_op.drop_column('share_id')

    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_index('ix_tasks_created_by_id')
        batch_op.drop_index('ix_tasks_depends_on_task_id')
        batch_op.create_index('ix_tasks_created_by', ['created_by_id'], unique=False)
        batch_op.create_index('ix_tasks_depends_on', ['depends_on_task_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_index('ix_tasks_depends_on')
        batch_op.drop_index('ix_tasks_created_by')
        batch_op.create_index('ix_tasks_depends_on_task_id', ['depends_on_task_id'], unique=False)
        batch_op.create_index('ix_tasks_created_by_id', ['created_by_id'], unique=False)

    with op.batch_alter_table('share_analytics', schema=None) as batch_op:
        batch_op.add_column(sa.Column('share_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('viewer_ip', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('viewer_user_agent', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('session_duration', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('share_analytics_share_id_fkey', 'shared_links', ['share_id'], ['id'])
        batch_op.drop_column('time_spent_seconds')
        batch_op.drop_column('visitor_country')
        batch_op.drop_column('visitor_user_agent')
        batch_op.drop_column('visitor_ip')
        batch_op.drop_column('shared_link_id')

    with op.batch_alter_table('sessions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sessions_workspace_id'))
        batch_op.drop_index(batch_op.f('ix_sessions_user_id'))
        batch_op.drop_index(batch_op.f('ix_sessions_meeting_id'))
        batch_op.drop_index('ix_sessions_status_started')
        batch_op.create_index('ix_sessions_status_started', ['status', sa.text('started_at DESC')], unique=False)
        batch_op.create_index('ix_sessions_workspace', ['workspace_id'], unique=False)
        batch_op.create_index('ix_sessions_user', ['user_id'], unique=False)
        batch_op.create_index('ix_sessions_meeting', ['meeting_id'], unique=False)

    with op.batch_alter_table('segments', schema=None) as batch_op:
        batch_op.drop_column('highlight_color')
        batch_op.drop_column('is_highlighted')

    with op.batch_alter_table('meetings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('meetings_session_id_fkey', 'sessions', ['session_id'], ['id'])
        batch_op.drop_index('ix_meetings_organizer')
        batch_op.drop_index('ix_meetings_workspace_status_created')
        batch_op.create_index('ix_meetings_workspace_status_created', ['workspace_id', 'status', sa.text('created_at DESC')], unique=False)
        batch_op.create_index('ix_meetings_session_id', ['session_id'], unique=False)
        batch_op.create_index('ix_meetings_organizer_id', ['organizer_id'], unique=False)

    with op.batch_alter_table('analytics', schema=None) as batch_op:
        batch_op.drop_index('ix_analytics_status_created')
        batch_op.create_index('ix_analytics_status_created', ['analysis_status', sa.text('created_at DESC')], unique=False)

    op.create_table('customers',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('customers_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('stripe_customer_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='customers_pkey'),
    sa.UniqueConstraint('user_id', name='customers_user_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('feature_flags',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('key', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('note', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='feature_flags_pkey'),
    sa.UniqueConstraint('key', name='feature_flags_key_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('memberships',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('team_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=24), server_default=sa.text("'member'::character varying"), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], name='memberships_team_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='memberships_pkey')
    )
    op.create_table('summary_docs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('actions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('decisions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('risks', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(length=8), autoincrement=False, nullable=True),
    sa.Column('model', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='summary_docs_pkey'),
    sa.UniqueConstraint('session_id', name='summary_docs_session_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('memory_embeddings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('embedding', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('source_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='memory_embeddings_pkey')
    )
    op.create_table('teams',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='teams_pkey')
    )
    op.create_table('integration_tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(length=24), autoincrement=False, nullable=False),
    sa.Column('access_token', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='integration_tokens_pkey')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('stripe_subscription_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=32), server_default=sa.text("'active'::character varying"), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='subscriptions_customer_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='subscriptions_pkey'),
    sa.UniqueConstraint('stripe_subscription_id', name='subscriptions_stripe_subscription_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
