"""Initial clean database schema

Revision ID: 6f9f2dd343f5
Revises: 
Create Date: 2025-09-30 19:34:55.326579

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6f9f2dd343f5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('external_id', sa.String(length=64), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('started_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('locale', sa.String(length=10), nullable=True),
    sa.Column('device_info', sa.JSON(), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('total_segments', sa.Integer(), nullable=True),
    sa.Column('average_confidence', sa.Float(), nullable=True),
    sa.Column('total_duration', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sessions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sessions_external_id'), ['external_id'], unique=True)

    # Create users table WITHOUT workspace FK (circular dependency - add later)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('display_name', sa.String(length=128), nullable=True),
    sa.Column('avatar_url', sa.String(length=256), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('role', sa.String(length=32), nullable=False),
    sa.Column('timezone', sa.String(length=64), nullable=True),
    sa.Column('workspace_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('preferences', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    # Create workspaces table WITHOUT owner FK (circular dependency - add later)
    op.create_table('workspaces',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('slug', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('plan', sa.String(length=32), nullable=False),
    sa.Column('max_users', sa.Integer(), nullable=False),
    sa.Column('logo_url', sa.String(length=256), nullable=True),
    sa.Column('theme_settings', sa.JSON(), nullable=True),
    sa.Column('integrations', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('workspaces', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_workspaces_slug'), ['slug'], unique=True)

    # Add BOTH circular foreign keys AFTER both tables exist
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_users_workspace_id', 'workspaces', ['workspace_id'], ['id'])
    
    with op.batch_alter_table('workspaces', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_workspaces_owner_id', 'users', ['owner_id'], ['id'])

    op.create_table('chunk_metrics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('chunk_id', sa.String(length=64), nullable=False),
    sa.Column('t_client_chunk_start', sa.BigInteger(), nullable=True),
    sa.Column('t_client_chunk_end', sa.BigInteger(), nullable=True),
    sa.Column('t_client_tx', sa.BigInteger(), nullable=True),
    sa.Column('t_ws_rx', sa.BigInteger(), nullable=True),
    sa.Column('t_decode_start', sa.BigInteger(), nullable=True),
    sa.Column('t_decode_done', sa.BigInteger(), nullable=True),
    sa.Column('t_api_start', sa.BigInteger(), nullable=True),
    sa.Column('t_api_done', sa.BigInteger(), nullable=True),
    sa.Column('t_emit_interim', sa.BigInteger(), nullable=True),
    sa.Column('t_emit_final', sa.BigInteger(), nullable=True),
    sa.Column('t_client_render_interim', sa.BigInteger(), nullable=True),
    sa.Column('t_client_render_final', sa.BigInteger(), nullable=True),
    sa.Column('end_to_end_latency', sa.Float(), nullable=True),
    sa.Column('partial_result_latency', sa.Float(), nullable=True),
    sa.Column('finalization_latency', sa.Float(), nullable=True),
    sa.Column('real_time_factor', sa.Float(), nullable=True),
    sa.Column('throughput', sa.Float(), nullable=True),
    sa.Column('cpu_usage', sa.Float(), nullable=True),
    sa.Column('memory_usage', sa.Float(), nullable=True),
    sa.Column('network_bytes_sent', sa.BigInteger(), nullable=True),
    sa.Column('network_bytes_recv', sa.BigInteger(), nullable=True),
    sa.Column('interim_updates_count', sa.Integer(), nullable=True),
    sa.Column('transcript_change_rate', sa.Float(), nullable=True),
    sa.Column('avg_confidence_score', sa.Float(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('chunk_metrics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_chunk_metrics_chunk_id'), ['chunk_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_chunk_metrics_session_id'), ['session_id'], unique=False)

    op.create_table('markers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('speaker', sa.String(length=100), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meetings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('meeting_type', sa.String(length=64), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('scheduled_start', sa.DateTime(), nullable=True),
    sa.Column('scheduled_end', sa.DateTime(), nullable=True),
    sa.Column('actual_start', sa.DateTime(), nullable=True),
    sa.Column('actual_end', sa.DateTime(), nullable=True),
    sa.Column('timezone', sa.String(length=64), nullable=False),
    sa.Column('agenda', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('priority', sa.String(length=16), nullable=False),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.Column('recurring_pattern', sa.JSON(), nullable=True),
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.Column('workspace_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('recording_enabled', sa.Boolean(), nullable=False),
    sa.Column('transcription_enabled', sa.Boolean(), nullable=False),
    sa.Column('ai_insights_enabled', sa.Boolean(), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=False),
    sa.Column('sharing_settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organizer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('segments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('kind', sa.String(length=16), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('avg_confidence', sa.Float(), nullable=True),
    sa.Column('start_ms', sa.BigInteger().with_variant(sa.BigInteger(), 'postgresql'), nullable=True),
    sa.Column('end_ms', sa.BigInteger().with_variant(sa.BigInteger(), 'postgresql'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('segments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_segments_session_id'), ['session_id'], unique=False)

    op.create_table('session_metrics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('avg_end_to_end_latency', sa.Float(), nullable=True),
    sa.Column('avg_partial_result_latency', sa.Float(), nullable=True),
    sa.Column('avg_finalization_latency', sa.Float(), nullable=True),
    sa.Column('avg_real_time_factor', sa.Float(), nullable=True),
    sa.Column('avg_throughput', sa.Float(), nullable=True),
    sa.Column('p95_end_to_end_latency', sa.Float(), nullable=True),
    sa.Column('p99_end_to_end_latency', sa.Float(), nullable=True),
    sa.Column('avg_cpu_usage', sa.Float(), nullable=True),
    sa.Column('peak_cpu_usage', sa.Float(), nullable=True),
    sa.Column('avg_memory_usage', sa.Float(), nullable=True),
    sa.Column('peak_memory_usage', sa.Float(), nullable=True),
    sa.Column('total_network_usage', sa.BigInteger(), nullable=True),
    sa.Column('total_chunks', sa.Integer(), nullable=False),
    sa.Column('successful_chunks', sa.Integer(), nullable=False),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('timeout_count', sa.Integer(), nullable=False),
    sa.Column('word_error_rate', sa.Float(), nullable=True),
    sa.Column('sentence_error_rate', sa.Float(), nullable=True),
    sa.Column('avg_confidence_score', sa.Float(), nullable=True),
    sa.Column('total_interim_updates', sa.Integer(), nullable=False),
    sa.Column('avg_transcript_change_rate', sa.Float(), nullable=True),
    sa.Column('quality_delay_tradeoff', sa.Text(), nullable=True),
    sa.Column('total_words', sa.Integer(), nullable=True),
    sa.Column('total_duration_sec', sa.Float(), nullable=True),
    sa.Column('audio_quality_score', sa.Float(), nullable=True),
    sa.Column('reference_transcript_available', sa.String(length=5), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('session_metrics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_session_metrics_session_id'), ['session_id'], unique=True)

    op.create_table('shared_links',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('shared_links', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_shared_links_session_id'), ['session_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_shared_links_token'), ['token'], unique=True)

    op.create_table('analytics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('meeting_id', sa.Integer(), nullable=False),
    sa.Column('total_duration_minutes', sa.Float(), nullable=True),
    sa.Column('actual_vs_scheduled_ratio', sa.Float(), nullable=True),
    sa.Column('participant_count', sa.Integer(), nullable=True),
    sa.Column('overall_engagement_score', sa.Float(), nullable=True),
    sa.Column('average_talk_time_per_person', sa.Float(), nullable=True),
    sa.Column('talk_time_distribution', sa.JSON(), nullable=True),
    sa.Column('interruption_frequency', sa.Float(), nullable=True),
    sa.Column('overall_sentiment_score', sa.Float(), nullable=True),
    sa.Column('sentiment_trend', sa.JSON(), nullable=True),
    sa.Column('positive_moments', sa.JSON(), nullable=True),
    sa.Column('negative_moments', sa.JSON(), nullable=True),
    sa.Column('decisions_made_count', sa.Integer(), nullable=True),
    sa.Column('action_items_created', sa.Integer(), nullable=True),
    sa.Column('agenda_completion_rate', sa.Float(), nullable=True),
    sa.Column('meeting_effectiveness_score', sa.Float(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('unique_speakers', sa.Integer(), nullable=True),
    sa.Column('topic_keywords', sa.JSON(), nullable=True),
    sa.Column('key_topics', sa.JSON(), nullable=True),
    sa.Column('question_count', sa.Integer(), nullable=True),
    sa.Column('idea_count', sa.Integer(), nullable=True),
    sa.Column('disagreement_count', sa.Integer(), nullable=True),
    sa.Column('consensus_moments', sa.JSON(), nullable=True),
    sa.Column('meeting_efficiency_score', sa.Float(), nullable=True),
    sa.Column('time_spent_on_agenda', sa.Float(), nullable=True),
    sa.Column('off_topic_time_percentage', sa.Float(), nullable=True),
    sa.Column('most_active_participant', sa.String(length=128), nullable=True),
    sa.Column('quietest_participant', sa.String(length=128), nullable=True),
    sa.Column('dominant_speaker_percentage', sa.Float(), nullable=True),
    sa.Column('balanced_participation', sa.Boolean(), nullable=True),
    sa.Column('follow_up_required', sa.Boolean(), nullable=True),
    sa.Column('next_steps_clarity', sa.Float(), nullable=True),
    sa.Column('unresolved_issues_count', sa.Integer(), nullable=True),
    sa.Column('meeting_summary_quality', sa.Float(), nullable=True),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('insights_generated', sa.JSON(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('vs_team_average', sa.JSON(), nullable=True),
    sa.Column('improvement_areas', sa.JSON(), nullable=True),
    sa.Column('analysis_status', sa.String(length=32), nullable=False),
    sa.Column('analysis_started_at', sa.DateTime(), nullable=True),
    sa.Column('analysis_completed_at', sa.DateTime(), nullable=True),
    sa.Column('analysis_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('meeting_id')
    )
    op.create_table('calendar_events',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('meeting_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(length=32), nullable=False),
    sa.Column('external_event_id', sa.String(length=256), nullable=False),
    sa.Column('calendar_id', sa.String(length=256), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=256), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('timezone', sa.String(length=64), nullable=False),
    sa.Column('is_all_day', sa.Boolean(), nullable=False),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.Column('recurrence_rule', sa.Text(), nullable=True),
    sa.Column('attendees', sa.JSON(), nullable=True),
    sa.Column('organizer_email', sa.String(length=120), nullable=True),
    sa.Column('sync_status', sa.String(length=32), nullable=False),
    sa.Column('last_synced', sa.DateTime(), nullable=True),
    sa.Column('sync_error', sa.Text(), nullable=True),
    sa.Column('auto_create_meeting', sa.Boolean(), nullable=False),
    sa.Column('auto_start_recording', sa.Boolean(), nullable=False),
    sa.Column('send_meeting_link', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('meeting_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('role', sa.String(length=32), nullable=False),
    sa.Column('speaker_id', sa.String(length=64), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('talk_time_seconds', sa.Float(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('interruption_count', sa.Integer(), nullable=True),
    sa.Column('question_count', sa.Integer(), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('engagement_score', sa.Float(), nullable=True),
    sa.Column('participation_percentage', sa.Float(), nullable=True),
    sa.Column('is_present', sa.Boolean(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('left_at', sa.DateTime(), nullable=True),
    sa.Column('device_info', sa.JSON(), nullable=True),
    sa.Column('audio_quality_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('task_type', sa.String(length=32), nullable=False),
    sa.Column('priority', sa.String(length=16), nullable=False),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('completion_percentage', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('reminder_date', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('meeting_id', sa.Integer(), nullable=False),
    sa.Column('assigned_to_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('extracted_by_ai', sa.Boolean(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('extraction_context', sa.JSON(), nullable=True),
    sa.Column('estimated_hours', sa.Float(), nullable=True),
    sa.Column('actual_hours', sa.Float(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('depends_on_task_id', sa.Integer(), nullable=True),
    sa.Column('is_collaborative', sa.Boolean(), nullable=False),
    sa.Column('watchers', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['depends_on_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tasks')
    op.drop_table('participants')
    op.drop_table('calendar_events')
    op.drop_table('analytics')
    with op.batch_alter_table('shared_links', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_shared_links_token'))
        batch_op.drop_index(batch_op.f('ix_shared_links_session_id'))

    op.drop_table('shared_links')
    with op.batch_alter_table('session_metrics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_session_metrics_session_id'))

    op.drop_table('session_metrics')
    with op.batch_alter_table('segments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_segments_session_id'))

    op.drop_table('segments')
    op.drop_table('meetings')
    op.drop_table('markers')
    with op.batch_alter_table('chunk_metrics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chunk_metrics_session_id'))
        batch_op.drop_index(batch_op.f('ix_chunk_metrics_chunk_id'))

    op.drop_table('chunk_metrics')
    
    # Drop BOTH circular FKs before dropping tables
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('fk_users_workspace_id', type_='foreignkey')
    
    with op.batch_alter_table('workspaces', schema=None) as batch_op:
        batch_op.drop_constraint('fk_workspaces_owner_id', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_workspaces_slug'))

    op.drop_table('workspaces')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('sessions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sessions_external_id'))

    op.drop_table('sessions')
    # ### end Alembic commands ###
