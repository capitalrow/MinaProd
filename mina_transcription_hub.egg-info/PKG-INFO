Metadata-Version: 2.4
Name: mina-transcription-hub
Version: 0.1.0
Summary: Meeting Insights & Action Platform - Real-time transcription and AI-powered meeting productivity
Author-email: Mina Development Team <dev@mina-platform.com>
License: MIT
Project-URL: Homepage, https://github.com/mina-platform/mina-transcription-hub
Project-URL: Documentation, https://docs.mina-platform.com
Project-URL: Repository, https://github.com/mina-platform/mina-transcription-hub.git
Project-URL: Issues, https://github.com/mina-platform/mina-transcription-hub/issues
Keywords: transcription,meetings,ai,productivity,real-time
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Multimedia :: Sound/Audio :: Speech
Classifier: Topic :: Office/Business
Classifier: Topic :: Communications :: Conferencing
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: flask>=2.3.0
Requires-Dist: flask-socketio>=5.3.0
Requires-Dist: flask-sqlalchemy>=3.0.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: werkzeug>=2.3.0
Requires-Dist: whitenoise>=6.5.0
Requires-Dist: eventlet>=0.33.0
Requires-Dist: python-engineio>=4.7.0
Requires-Dist: python-socketio[asyncio-client,client]>=5.8.0
Requires-Dist: numpy>=1.24.0
Requires-Dist: scipy>=1.10.0
Requires-Dist: webrtcvad>=2.0.10
Requires-Dist: pydub>=0.25.0
Requires-Dist: requests>=2.31.0
Requires-Dist: openai>=1.0.0
Requires-Dist: sqlalchemy>=2.0.0
Requires-Dist: flask-cors>=6.0.1
Requires-Dist: pytest>=8.4.1
Requires-Dist: black>=25.1.0
Requires-Dist: ruff>=0.12.10
Requires-Dist: python-docx>=1.2.0
Requires-Dist: reportlab>=4.4.3
Requires-Dist: gunicorn[eventlet]>=23.0.0
Requires-Dist: psutil>=7.0.0
Requires-Dist: websocket>=0.2.1
Requires-Dist: redis>=6.4.0
Requires-Dist: cryptography>=45.0.6
Requires-Dist: bcrypt>=4.3.0
Requires-Dist: pyjwt>=2.10.1
Requires-Dist: flask-login>=0.6.3
Requires-Dist: aiohttp>=3.12.15
Requires-Dist: websockets>=15.0.1
Provides-Extra: dev
Requires-Dist: pytest>=7.4.0; extra == "dev"
Requires-Dist: pytest-cov>=4.1.0; extra == "dev"
Requires-Dist: pytest-flask>=1.2.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: black>=23.7.0; extra == "dev"
Requires-Dist: isort>=5.12.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: mypy>=1.5.0; extra == "dev"
Requires-Dist: pre-commit>=3.3.0; extra == "dev"
Requires-Dist: ipython>=8.14.0; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest>=7.4.0; extra == "test"
Requires-Dist: pytest-cov>=4.1.0; extra == "test"
Requires-Dist: pytest-flask>=1.2.0; extra == "test"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "test"
Requires-Dist: requests-mock>=1.11.0; extra == "test"
Provides-Extra: production
Requires-Dist: gunicorn>=21.2.0; extra == "production"
Requires-Dist: gevent>=23.7.0; extra == "production"
Requires-Dist: redis>=4.6.0; extra == "production"
Requires-Dist: psycopg2-binary>=2.9.7; extra == "production"

# Mina - Meeting Insights & Action Platform

A next-generation SaaS platform that transforms meetings into actionable moments, combining real-time transcription, advanced AI capabilities, and integrated productivity tools.

## üöÄ Features

### Core Real-time Capabilities
- **Live Transcription**: High-accuracy real-time transcription with WebSocket streaming
- **Speaker Identification**: Automatic speaker detection and tagging
- **Voice Activity Detection (VAD)**: Intelligent audio processing with noise reduction
- **Live Editable Notes**: Real-time collaborative editing during meetings

### AI-Powered Insights
- **Actionable Summaries**: AI-generated meeting summaries with key insights
- **Task Extraction**: Automatic identification and prioritization of action items
- **Sentiment Analysis**: Conversational tone analysis for engagement insights
- **Impact Scoring**: Priority-based task ranking for effective follow-ups

### Production-Ready Infrastructure
- **Flask + Socket.IO**: EventLoop-based WebSocket handling with eventlet
- **PostgreSQL Database**: Scalable data storage with SQLAlchemy ORM  
- **Layered Architecture**: Clean separation with services, routes, and models
- **Health Monitoring**: Comprehensive health checks and system monitoring
- **RESTful API**: Complete API for external integrations and automation

## üèóÔ∏è Architecture

### Runtime Configuration
- **WSGI Server**: Gunicorn with eventlet workers for WebSocket compatibility
- **Development Mode**: Direct Socket.IO server with hot reload
- **Static Serving**: Flask built-in static file serving (Socket.IO compatible)
- **Database**: SQLAlchemy with connection pooling and health monitoring

### Service Architecture
- **TranscriptionService**: Orchestrates VAD, audio processing, and Whisper integration
- **VADService**: Advanced voice activity detection with noise reduction  
- **WhisperStreamingService**: Real-time OpenAI Whisper API integration
- **AudioProcessor**: Signal processing and audio format conversion

## üöÄ Quick Start

### Installation and Setup

```bash
# Install dependencies  
make install

# Set up environment
cp .env.example .env
# Edit .env with your API keys and configuration

# Initialize database
make db-init
```

### Running the Application

**Development Server:**
```bash
make dev
# Or: python main.py
# Runs on http://localhost:8000
```

**Production Server:**
```bash  
make run
# Or: gunicorn -k eventlet -w 1 main:app --bind 0.0.0.0:8000
```

### Verification Steps

1. **Health Check:**
   ```bash
   curl -s http://localhost:8000/health
   # Expected: {"status":"ok","database":"connected",...}
   ```

2. **Live Interface:**
   - Open `http://localhost:8000/live`
   - Check browser console for "Socket connected" message
   - Should see "Connection state: connected" indicator

3. **Run Tests:**
   ```bash
   make test
   # Includes health checks and WebSocket smoke tests
   ```

