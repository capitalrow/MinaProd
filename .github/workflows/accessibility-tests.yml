name: Accessibility Tests (axe-core + WCAG 2.1 AA)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  accessibility-tests:
    name: Run Accessibility Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        python-version: ['3.11']
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Node.js dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-playwright

      - name: Set up test environment
        run: |
          mkdir -p tests/results/accessibility
          export DATABASE_URL="sqlite:///:memory:"
          export SESSION_SECRET="test-secret-key-for-ci-testing"
          export FLASK_ENV="testing"

      - name: Start Flask application
        run: |
          nohup python -m gunicorn --bind 0.0.0.0:5000 --reuse-port main:app &
          sleep 10
          curl -f http://localhost:5000/health || echo "Health check failed"
        env:
          DATABASE_URL: "sqlite:///:memory:"
          SESSION_SECRET: "test-secret-key-for-ci"
          FLASK_ENV: "testing"

      - name: Run Playwright axe-core accessibility tests
        run: |
          npx playwright test tests/e2e/06-axe-core-automated.spec.js --reporter=html --reporter=json
        env:
          CI: true

      - name: Run Python Playwright accessibility tests
        run: |
          pytest tests/accessibility/test_wcag_compliance.py -v --html=tests/results/accessibility/pytest_report.html --self-contained-html
        continue-on-error: true

      - name: Upload accessibility test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-test-results-node-${{ matrix.node-version }}
          path: |
            tests/results/accessibility/
            tests/results/html-report/
            tests/results/test-results.json
          retention-days: 30

      - name: Upload Playwright HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-node-${{ matrix.node-version }}
          path: tests/results/html-report/
          retention-days: 30

      - name: Analyze accessibility violations
        if: always()
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          echo "📊 Accessibility Test Summary:"
          echo "========================================"
          if [ -f tests/results/accessibility/*_axe_report.json ]; then
            for file in tests/results/accessibility/*_axe_report.json; do
              violations=$(jq '.violations | length' "$file" 2>/dev/null || echo "0")
              passes=$(jq '.passes | length' "$file" 2>/dev/null || echo "0")
              echo "$(basename $file): $passes passed, $violations violations"
            done
          else
            echo "No axe-core reports found"
          fi
          echo "========================================"

      - name: Fail if critical violations found
        if: always()
        run: |
          critical_count=0
          if [ -d tests/results/accessibility ]; then
            for file in tests/results/accessibility/*_axe_report.json; do
              if [ -f "$file" ]; then
                critical=$(jq '[.violations[] | select(.impact=="critical" or .impact=="serious")] | length' "$file" 2>/dev/null || echo "0")
                critical_count=$((critical_count + critical))
              fi
            done
          fi
          
          echo "Total critical/serious violations: $critical_count"
          
          if [ $critical_count -gt 0 ]; then
            echo "❌ FAIL: Found $critical_count critical/serious accessibility violations"
            exit 1
          else
            echo "✅ PASS: No critical accessibility violations found"
          fi

  accessibility-summary:
    name: Accessibility Summary
    runs-on: ubuntu-latest
    needs: accessibility-tests
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate summary report
        run: |
          echo "# 🎯 Accessibility Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Status" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.accessibility-tests.result }}" == "success" ]; then
            echo "✅ **All accessibility tests passed**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some accessibility tests failed**" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- WCAG 2.1 Level A" >> $GITHUB_STEP_SUMMARY
          echo "- WCAG 2.1 Level AA" >> $GITHUB_STEP_SUMMARY
          echo "- Keyboard navigation" >> $GITHUB_STEP_SUMMARY
          echo "- Screen reader support" >> $GITHUB_STEP_SUMMARY
          echo "- Color contrast" >> $GITHUB_STEP_SUMMARY
          echo "- Form accessibility" >> $GITHUB_STEP_SUMMARY
          echo "- ARIA attributes" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📄 View detailed reports in the artifacts section above" >> $GITHUB_STEP_SUMMARY
